{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["PAGES","INTRO","SCENARIO","OPTION","SUMMARY","SCENARIOS","CULTURE","title","subtitle","desc","FRIENDS","SPORT","OPTIONS","ACT","MOVIE","SNOOKER","PUBQUIZ","TRAMPOLINE","CLIMBING","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderCard","options","handleOnClick","height","react_default","a","createElement","key","style","concat","display","flexDirection","justifyContent","Card","width","backgroundColor","onClick","Body","Title","Subtitle","className","Text","renderOptionChoice","handleOnChooseClick","setState","showOptions","handleOnDrawClick","optionKeys","keys","state","scenario","option","Math","floor","random","length","page","renderOptionCards","cardPercentageHeight","flexGrow","map","handleOnOptionClick","Jumbotron","marginBottom","flexFlow","Button","variant","renderScenarioChoice","showScenarios","scenarioKeys","renderScenarioCards","handleOnScenarioClick","renderSummary","bg","text","Header","as","renderIntro","renderPage","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAIMA,SAAQ,CACZC,MAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,QAAS,IAGLC,EAAY,CAChBC,QAAS,CACPC,MAAO,UACPC,SAAU,qCACVC,KAAM,0LAERC,QAAS,CACPH,MAAO,UACPC,SAAU,6DACVC,KAAM,6NAERE,MAAO,CACLJ,MAAO,QACPC,SAAU,4CACVC,KAAM,iOAIJG,EAAU,CACdN,QAAS,CACPO,IAAK,CACHN,MAAO,QACPC,SAAU,eACVC,KAAM,6KAERK,MAAO,CACLP,MAAO,OACPC,SAAU,eACVC,KAAM,sJAGVC,QAAS,CACPK,QAAS,CACPR,MAAO,SACPC,SAAU,sBACVC,KAAM,mLAERO,QAAS,CACPT,MAAO,WACPC,SAAU,sBACVC,KAAM,mKAGVE,MAAO,CACLM,WAAY,CACVV,MAAO,iBACPC,SAAU,SACVC,KAAM,yHAERS,SAAU,CACRX,MAAO,4BACPC,SAAU,SACVC,KAAM,+HA6LGU,cAvLb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QASFI,WAAa,SAACC,EAASC,EAAeC,GAAW,IACxCvB,EAAyBqB,EAAzBrB,MAAOC,EAAkBoB,EAAlBpB,SAAUC,EAAQmB,EAARnB,KACxB,OACEsB,EAAAC,EAAAC,cAAA,OAAKC,IAAK3B,EAAO4B,MAAO,CAACL,OAAM,GAAAM,OAAKN,EAAL,KAAgBO,QAAS,OAAQC,cAAe,SAAUC,eAAgB,WACvGR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMN,IAAK3B,EAAO4B,MAAO,CAAEM,MAAO,OAAQC,gBAAiB,WAAaC,QAASd,GAC/EE,EAAAC,EAAAC,cAACO,EAAA,EAAKI,KAAN,KACEb,EAAAC,EAAAC,cAACO,EAAA,EAAKK,MAAN,KAAatC,GACbwB,EAAAC,EAAAC,cAACO,EAAA,EAAKM,SAAN,CAAeC,UAAU,mBAAmBvC,GAC5CuB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,KAAYvC,OAlBRW,EAyBd6B,mBAAqB,WACnB,IAAMC,EAAsB,kBAAM9B,EAAK+B,SAAS,CAACC,aAAa,KACxDC,EAAoB,WACxB,IAAMC,EAAajC,OAAOkC,KAAK3C,EAAQQ,EAAKoC,MAAMC,WAClDrC,EAAK+B,SAAS,CACZO,OAAQJ,EAAWK,KAAKC,MAAMD,KAAKE,SAASP,EAAWQ,SACvDC,KAAM/D,EAAMI,WAIV4D,EAAoB,WACxB,IAAMC,EAAuBN,KAAKC,MAAM,IAAMvC,OAAOkC,KAAK3C,EAAQQ,EAAKoC,MAAMC,WAAWK,QACxF,OACE/B,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC+B,SAAU,IAEnB7C,OAAOkC,KAAK3C,EAAQQ,EAAKoC,MAAMC,WAC5BU,IAAI,SAAAT,GAAM,OAAItC,EAAKO,WAAWf,EAAQQ,EAAKoC,MAAMC,UAAUC,GAP1C,SAACA,GAAD,OAAY,kBAAMtC,EAAK+B,SAAS,CAACO,SAAQK,KAAM/D,EAAMI,WAOFgE,CAAoBV,GAASO,OAkB5G,OACElC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWlC,MAAO,CAACL,OAAQ,QAASwC,aAAc,EAAGjC,QAAS,OAAQkC,SAAU,WAC9ExC,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,iCAAyB5B,EAAUe,EAAKoC,MAAMC,UAAUlD,OACxDwB,EAAAC,EAAAC,cAAA,UAAK5B,EAAUe,EAAKoC,MAAMC,UAAUhD,MACpCsB,EAAAC,EAAAC,cAAA,2OARKb,EAAKoC,MAAMJ,YAAcY,IAR9BjC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QAASO,GAAnC,WADF,eAGEnB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QAASU,GAArC,YAnDMjC,EAsEdsD,qBAAuB,WACrB,IAAMxB,EAAsB,kBAAM9B,EAAK+B,SAAS,CAACwB,eAAe,KAC1DtB,EAAoB,WACxB,IAAMuB,EAAevD,OAAOkC,KAAKlD,GACjCe,EAAK+B,SAAS,CACZM,SAAUmB,EAAajB,KAAKC,MAAMD,KAAKE,SAASe,EAAad,SAC7DC,KAAM/D,EAAMG,UAIV0E,EAAsB,WAC1B,IAAMZ,EAAuBN,KAAKC,MAAM,IAAMvC,OAAOkC,KAAKlD,GAAWyD,QACrE,OACE/B,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC+B,SAAU,IACpB7C,OAAOkC,KAAKlD,GAAW8D,IAAI,SAAAV,GAAQ,OAAIrC,EAAKO,WAAWtB,EAAUoD,GAL1C,SAACA,GAAD,OAAc,kBAAMrC,EAAK+B,SAAS,CAACM,WAAUM,KAAM/D,EAAMG,UAKJ2E,CAAsBrB,GAAWQ,OAiBpH,OACElC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWlC,MAAO,CAACL,OAAQ,QAASwC,aAAc,EAAGjC,QAAS,OAAQkC,SAAU,WAC9ExC,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,mPAE8GF,EAAAC,EAAAC,cAAA,kBAF9G,KAE4HF,EAAAC,EAAAC,cAAA,kBAF5H,oEANKb,EAAKoC,MAAMmB,cAAgBE,IARhC9C,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QAASO,GAAnC,WADF,eAGEnB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,QAAQ,YAAY9B,QAASU,GAArC,YA7FMjC,EAiHd2D,cAAgB,WACd,OACEhD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWlC,MAAO,CAACL,OAAQ,QAASwC,aAAc,EAAGjC,QAAS,OAAQkC,SAAU,WAC9ExC,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,iOAGAF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC+B,SAAU,EAAG7B,QAAS,OAAQC,cAAe,SAAUC,eAAgB,WAClFR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMwC,GAAG,UAAUC,KAAK,SACtBlD,EAAAC,EAAAC,cAACO,EAAA,EAAK0C,OAAN,CAAaC,GAAG,MAAhB,qBACApD,EAAAC,EAAAC,cAACO,EAAA,EAAKI,KAAN,KACEb,EAAAC,EAAAC,cAACO,EAAA,EAAKK,MAAN,KAAajC,EAAQQ,EAAKoC,MAAMC,UAAUrC,EAAKoC,MAAME,QAAQnD,OAC7DwB,EAAAC,EAAAC,cAACO,EAAA,EAAKM,SAAN,CAAeC,UAAU,mBAAmBnC,EAAQQ,EAAKoC,MAAMC,UAAUrC,EAAKoC,MAAME,QAAQlD,UAC5FuB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,KACCpC,EAAQQ,EAAKoC,MAAMC,UAAUrC,EAAKoC,MAAME,QAAQjD,SAKvDsB,EAAAC,EAAAC,cAAA,2LApIQb,EA2IdgE,YAAc,WAGZ,OACErD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAWlC,MAAO,CAACL,OAAQ,QAASwC,aAAc,EAAGjC,QAAS,OAAQkC,SAAU,WAC9ExC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yDAAqCF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAC3CF,EAAAC,EAAAC,cAAA,2iBAKIF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQ7B,QAbQ,kBAAMvB,EAAK+B,SAAS,CAACY,KAAM/D,EAAME,YAajBuE,QAAQ,WAAxC,iBAzJMrD,EA+JdiE,WAAa,WACX,OAAIjE,EAAKoC,MAAMO,OAAS/D,EAAMC,MACrBmB,EAAKgE,cAEVhE,EAAKoC,MAAMO,OAAS/D,EAAME,SACrBkB,EAAKsD,uBAEVtD,EAAKoC,MAAMO,OAAS/D,EAAMG,OACrBiB,EAAK6B,qBAEV7B,EAAKoC,MAAMO,OAAS/D,EAAMI,QACrBgB,EAAK2D,qBADd,GAvKA3D,EAAKoC,MAAQ,CACXO,KAAM/D,EAAMC,MACZ0E,eAAe,EACfvB,aAAa,EACbK,SAAU,MANArC,wEA+KZ,OACEW,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACZxB,KAAK8D,qBAlLIC,aCxDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a45e807f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, Jumbotron } from 'react-bootstrap';\nimport './App.css';\n\nconst PAGES = {\n  INTRO: 1,\n  SCENARIO: 2,\n  OPTION: 3,\n  SUMMARY: 4,\n}\n\nconst SCENARIOS = {\n  CULTURE: {\n    title: 'Kultura',\n    subtitle: 'Pora się nieco odchamić!',\n    desc: 'Jesteśmy już dorośli, trzeba skończyć z wygłupami. Pora zaznać trochę rozrywek poważnych ludzi - w końcu do bycia takimi aspirujemy.',\n  },\n  FRIENDS: {\n    title: 'Znajomi',\n    subtitle: 'Chcę świętować w większym gronie!',\n    desc: 'Podzwońmy po ludziach - zapewno ktoś się nudzi. Możemy się spotkać i zrobić coś razem. Jeśli nikt nie ma dziś czasu to nic - możemy to zrobić tylko we dwoje.',\n  },\n  SPORT: {\n    title: 'Sport',\n    subtitle: 'Zmęczmy się i zjedzmy coś!',\n    desc: 'Dość tego sztywniactwa - przebierzmy się w luźne ciuchy i wypoćmy trochę kalorii. Później trzeba będzie tylko uzupełnić trochę energii czymś pożywnym :)',\n  },\n}\n\nconst OPTIONS = {\n  CULTURE: {\n    ACT: {\n      title: 'Teatr',\n      subtitle: 'Teatr Polski',\n      desc: 'O 19:00 grany jest komedia romantyczna \"Filadelfiska opowieść\". W oczekiwaniu na nią możemy się udać na jakąś kolację/deser.',\n    },\n    MOVIE: {\n      title: 'Kino',\n      subtitle: 'Dowolne kino',\n      desc: 'Przejrzyjmy repertuar kin i wybierzmy najbardziej interesujący film. Decydujący głos posiada wyjątkowo dziś Karolinka :)',\n    },\n  },\n  FRIENDS: {\n    SNOOKER: {\n      title: 'Bilard',\n      subtitle: 'Fuga Mundi/La Sezam',\n      desc: 'Można też pomyśleć o innej grze barowej. Choć w bilard gra się w 2 osoby, zawsze fajniej wynająć 2-3 stoły w większej grupie.',\n    },\n    PUBQUIZ: {\n      title: 'Pub Quiz',\n      subtitle: 'Lewitacja/Pizza Hut',\n      desc: 'Możliwe terminy to 19:30 (Lewitacja) lub 20:00 (Pizza Hut na Skłodowskiej). W oczekiwaniu na pozostałych można coś zakąsić.',\n    },\n  },\n  SPORT: {\n    TRAMPOLINE: {\n      title: 'Park Trampolin',\n      subtitle: 'GOjump',\n      desc: 'Brzmi jak atrakcja dla dzieci, ale to tylko pozory. podobno wizyta tam potrafi nieźle dać w kość.',\n    },\n    CLIMBING: {\n      title: 'Ścianka wspinaczkowa',\n      subtitle: 'Fpinka',\n      desc: 'Podążajmy za aktualnymi trendami i także zacznijmy przygodę ze ścianką wspinaczkową :)',\n    },\n  },\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: PAGES.INTRO,\n      showScenarios: false,\n      showOptions: false,\n      scenario: null,\n    };\n  }\n\n  renderCard = (options, handleOnClick, height) => {\n    const {title, subtitle, desc} = options;\n    return (\n      <div key={title} style={{height: `${height}%`, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n        <Card key={title} style={{ width: '100%', backgroundColor: '#cecece' }} onClick={handleOnClick}>\n          <Card.Body>\n            <Card.Title>{title}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{subtitle}</Card.Subtitle>\n            <Card.Text>{desc}</Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n\n  renderOptionChoice = () => {\n    const handleOnChooseClick = () => this.setState({showOptions: true});\n    const handleOnDrawClick = () => {\n      const optionKeys = Object.keys(OPTIONS[this.state.scenario]);\n      this.setState({\n        option: optionKeys[Math.floor(Math.random()*optionKeys.length)],\n        page: PAGES.SUMMARY,\n      })\n    };\n    const handleOnOptionClick = (option) => () => this.setState({option, page: PAGES.SUMMARY});\n    const renderOptionCards = () => {\n      const cardPercentageHeight = Math.floor(100 / Object.keys(OPTIONS[this.state.scenario]).length);\n      return (\n        <div style={{flexGrow: 1}}>\n          {\n            Object.keys(OPTIONS[this.state.scenario])\n              .map(option => this.renderCard(OPTIONS[this.state.scenario][option], handleOnOptionClick(option), cardPercentageHeight))\n          }\n        </div>\n      );\n    };\n    const renderButtons = () => {\n      return (\n        <p>\n          <Button variant=\"primary\" onClick={handleOnChooseClick}>Wybierz</Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button variant=\"secondary\" onClick={handleOnDrawClick}>Losuj</Button>\n        </p>\n      )\n    };\n    const renderBody = () => {\n      return this.state.showOptions ? renderOptionCards() : renderButtons();\n    }\n\n    return (\n      <Jumbotron style={{height: \"100vh\", marginBottom: 0, display: 'flex', flexFlow: 'column'}}> \n        <h2>Wybór opcji</h2>\n        <h5>Wybrany scenariusz: {SCENARIOS[this.state.scenario].title}</h5>\n        <h6>{SCENARIOS[this.state.scenario].desc}</h6>\n        <p>Skoro wybór scenariusza mamy już za sobą to pora na konkret. Podobnie jak wcześniej możesz sama zadecydować o swojej najbliższej przyszłości lub zaufać ślepemu losowi :)</p>\n        {renderBody()}\n      </Jumbotron>\n    );\n  }\n\n  renderScenarioChoice = () => {\n    const handleOnChooseClick = () => this.setState({showScenarios: true});\n    const handleOnDrawClick = () => {\n      const scenarioKeys = Object.keys(SCENARIOS);\n      this.setState({\n        scenario: scenarioKeys[Math.floor(Math.random()*scenarioKeys.length)],\n        page: PAGES.OPTION,\n      })\n    };\n    const handleOnScenarioClick = (scenario) => () => this.setState({scenario, page: PAGES.OPTION});\n    const renderScenarioCards = () => {\n      const cardPercentageHeight = Math.floor(100 / Object.keys(SCENARIOS).length);\n      return (\n        <div style={{flexGrow: 1}}>\n          {Object.keys(SCENARIOS).map(scenario => this.renderCard(SCENARIOS[scenario], handleOnScenarioClick(scenario), cardPercentageHeight))}\n        </div>\n      );\n    };\n    const renderButtons = () => {\n      return (\n        <p>\n          <Button variant=\"primary\" onClick={handleOnChooseClick}>Wybierz</Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button variant=\"secondary\" onClick={handleOnDrawClick}>Losuj</Button>\n        </p>\n      )\n    };\n    const renderBody = () => {\n      return this.state.showScenarios ? renderScenarioCards() : renderButtons();\n    }\n\n    return (\n      <Jumbotron style={{height: \"100vh\", marginBottom: 0, display: 'flex', flexFlow: 'column'}}> \n        <h2>Wybór scenariusza</h2>\n        <p>\n          W pierwszym kroku wypada zdefiniować zgrubny pomysł na spędzenie wieczoru.\n          Możesz sama wybrać jeden spośród 3 scenariuszy lub zrzucić problem decyzyjny na aplikację klikając przycisk <i>Losuj</i> (<b>Uwaga</b>: używasz na własną odpowiedzialność!).\n        </p>\n        {renderBody()}\n      </Jumbotron>\n    );\n  }\n\n  renderSummary = () => {\n    return (\n      <Jumbotron style={{height: \"100vh\", marginBottom: 0, display: 'flex', flexFlow: 'column'}}>\n        <h2>Sukces!</h2>\n        <p>\n          Najtrudniejszą część mamy już za sobą. Nie było łatwo, ale udało się ustalić co będziemy robić w Twoje urodziny! Bartuś jest z Ciebie dumny :)\n        </p>\n        <div style={{flexGrow: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n          <Card bg=\"primary\" text=\"white\">\n            <Card.Header as=\"h3\">Twój wybór:</Card.Header>\n            <Card.Body>\n              <Card.Title>{OPTIONS[this.state.scenario][this.state.option].title}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-white\">{OPTIONS[this.state.scenario][this.state.option].subtitle}</Card.Subtitle>\n              <Card.Text>\n              {OPTIONS[this.state.scenario][this.state.option].desc}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n        <small>\n          Jeśli się teraz ładnie uśmieszniesz do swojego chłopaka i obdarzysz go całusem to będziesz mogła wylosować sobie prezent ;)\n        </small>\n      </Jumbotron>\n    );\n  }\n\n  renderIntro = () => {\n    const handleOnClick = () => this.setState({page: PAGES.SCENARIO})\n\n    return (\n      <Jumbotron style={{height: \"100vh\", marginBottom: 0, display: 'flex', flexFlow: 'column'}}>\n        <h2>Sto lat!</h2>\n        <h4>Dziś kończysz 23. rok życia.</h4><br /><br />\n        <p>\n          W systemie szsesnatkowym jesteś co prawda cały czas nieletnia, ale liczby robią się coraz poważniejsze :)\n          Osoby w tym wieku najczęściej muszą podejmować mnóstwo decyzji, które będą miały bardzo istotny wpływ na najbliższe lata ich życia.\n          Niestety przed Tobą kolejny trudny wybór: musisz zadecydować gdzie chcesz być zabrana z okazji urodzin przez swojego cudownego chłopaka.\n          Ta aplikacja ma na celu ułatwić tę decyzję.\n        </p><br />\n        <p>\n          <Button onClick={handleOnClick} variant=\"primary\">Rozpocznij</Button>\n        </p>\n      </Jumbotron>\n    );\n  }\n\n  renderPage = () => {\n    if (this.state.page === PAGES.INTRO) {\n      return this.renderIntro();\n    }\n    if (this.state.page === PAGES.SCENARIO) {\n      return this.renderScenarioChoice();\n    }\n    if (this.state.page === PAGES.OPTION) {\n      return this.renderOptionChoice();\n    }\n    if (this.state.page === PAGES.SUMMARY) {\n      return this.renderSummary();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}